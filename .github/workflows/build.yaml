name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MAVEN_OPTS: >-
    -Dmaven.repo.local=.m2/repository

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Rename artifact with Git commit hash
        run: |
	  artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: mule-artifact
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Deploy to CloudHub 2.0 DEV
        env:
          CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
          ENV: DEV
          VCORES: 0.1
          TARGET: ${{ secrets.DEV_TARGET }}
          MULE_ENV: DEV
          REPLICAS: 1
          SECRET_KEY: ${{ secrets.DEV_SECRET_KEY }}
        run: |
          artifactName=$(ls *.jar | head -1)
          echo "Deploying artifact: $artifactName"
          mvn deploy -e -s settings.xml $MAVEN_OPTS \
            -DmuleDeploy \
            -Dmule.artifact="$artifactName" \
            -Denvironment="$ENV" \
            -DvCores="$VCORES" \
            -Dtarget="$TARGET" \
            -Dmule.env="$MULE_ENV" \
            -Dreplicas="$REPLICAS" \
            -Danypoint.platform.client_id="$CLIENT_ID" \
            -Danypoint.platform.client_secret="$CLIENT_SECRET" \
            -Dmule.key="$SECRET_KEY" \
            -DskipTests
